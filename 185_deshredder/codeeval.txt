|presentatio|ep the disc|larly assum|omplexity-t|endent of t| into each |at differen| assume som|entations c|is can be a|ions can be|of encoding|h to be ind|rems regula|, one tries|bstract eno| be transfo|nto each ot|to keep the| be indepen|n though so|ussion abst|one tries t|s to keep t|r efficient|nput encodi|f the choic|choice of e|oretic theo|ncoding. Th|enough to b| choice of |ependent of| abstract e|s of comple|he discussi|rent repres|rly assume |g. This can|e of input |ncoding, on| enough to |s can be ac|nt represen| transforme|erent repre|retic theor|ing, one tr|crete choic| can be tra|nt of the c|ng. This ca|ugh to be i|ing. This c|theoretic t| one tries |plexity-the|ormed into |different r|e tries to |by ensuring|oice of enc|ssion abstr|ome proofs |arly assume|ing that di| achieved b| some proof|ms regularl|e discussio|encoding, o|tries to ke|ensuring th|med into ea|ng, one tri|h some proo|hieved by e|ther effici|eoretic the|ven though |ransformed | encoding, |s can be tr|p the discu|gh some pro|xity-theore|te choice o|scussion ab|transformed|of complexi|his can be | discussion|choice of i|lexity-theo|keep the di|ndependent |e transform|ns can be t|oofs of com|ent of the |ch other ef|y assume so|be achieved|the choice |representat|efficiently| other effi|Even though|abstract en|d into each|t encoding,|dependent o|ations can |n be achiev| This can b| of complex|ieved by en|t different|sentations |of the choi|me concrete|input encod|ved by ensu|ct enough t|nsuring tha|act enough |mplexity-th|e achieved |fferent rep|the discuss|pendent of | each other|f encoding.| that diffe|iscussion a|eep the dis|ndent of th|coding. Thi|y-theoretic|ly assume s|nough to be| proofs of |ring that d|ract enough|ume some co|hough some |oncrete cho|sformed int|rete choice|theorems re|ity-theoret|other effic|epresentati| of encodin|n abstract |f input enc|tations can|dent of the| of the cho|ferent repr|achieved by|her efficie|suring that|t represent|stract enou|that differ|fs of compl| efficientl|each other |e choice of|y ensuring |though some| some concr|ansformed i|orems regul|put encodin|esentations| theorems r|ut encoding| ensuring t|egularly as|tions can b| can be ach|f complexit|ssume some |ough some p|of input en|ed into eac|independent|ce of encod|e proofs of|to each oth|ed by ensur|ies to keep|he choice o|ic theorems|complexity-| independen|oding, one |an be trans|t enough to| by ensurin|ng that dif|heoretic th|fficiently.|er efficien| keep the d|g, one trie|o keep the | concrete c|me proofs o|some concre|formed into|hoice of in|eorems regu|ce of input|some proofs|ncrete choi|e concrete |proofs of c|ifferent re|e of encodi|be independ|h other eff|tic theorem|. This can |o each othe| choice of |rmed into e|hat differe|o be indepe|be transfor|ice of inpu|nsformed in| to keep th|ough to be |coding, one|hoice of en| complexity|tract enoug|can be tran| encoding. |etic theore|e independe|ries to kee|ding. This |exity-theor| different |-theoretic |into each o|ems regular|ete choice |oice of inp|n be transf|ofs of comp|en though s|ach other e|ugh some pr|d by ensuri|c theorems |ome concret|uring that |ons can be |This can be|sion abstra|encoding. T|to be indep| of input e|ntations ca| representa|assume some|an be achie| be achieve|ularly assu|ne tries to|sume some c| though som|cussion abs|gh to be in|concrete ch|ding, one t| regularly |me some con|oding. This|ice of enco|eved by ens|roofs of co| tries to k|t of the ch|can be achi|regularly a| to be inde|g that diff|gularly ass|e some conc| the discus|s regularly|chieved by |e choice of|discussion |ent represe|resentation|ion abstrac|on abstract|ty-theoreti| the choice| input enco|heorems reg|es to keep |
|ity and |but usua|eighbour|t neighb|imal one| but usu|om city | a rando|lesman s|ave been|ly yield|t usuall| determi|mal one.|ine a so| was one|e neares|at a ran|, but us|rithms u|ve been |t tour, |t algori|rithm wa|the opti|s a shor|st city |m was on|ling sal|alesman | algorit|starts a|ly not t|ds a sho|hm was o|elling s|visits t| visited|e first | a solut| at a ra|thms use|ly visit|rest nei|m city a|olution |ckly yie|nearest |thm was |lgorithm|irst alg|and repe|y yields|the firs|lution t|lling sa|s the ne| neighbo|blem. In|tarts at|ty until|ion to t|arest ne|of the f|sman sta|d. It qu|an start|optimal |n it, th|n starts|hort tou|he neare|em. In i| random | short t|rt tour,|e a solu| problem|an probl|until al| usually|eatedly |est city|nearest |rmine a |t, the s|ort tour|gorithms|a soluti| salesma| to the |to deter|uickly y|the sale| not the| solutio|o the tr|y visits|quickly |not the |y not th|kly yiel| the nea|t city u|termine | travell| the opt|been vis|lds a sh|ickly yi|ng sales|he neare|ot the o|isited. |random c|rst algo|ighbour |epeatedl|il all h|e travel|algorith|yields a|The near|man prob|est neig|orithms | starts |s used t|city and|e optima|esman st|dly visi|sited. I|In it, t| city an|d repeat|. It qui| and rep|etermine|ne a sol|peatedly| it, the|man star|e of the|timal on|ndom cit|salesman|lem. In |nd repea|ithms us|e been v|neighbou|he trave| yields |esman pr|used to |e neares|atedly v|ghbour a|s one of|our algo|n to the|he sales| first a|algorith|ur algor|hms used|rts at a|problem.|. In it,|elds a s|velling |, the sa|tion to | been vi|ravellin|y and re|first al|sits the|as one o|earest c|ne of th|ited. It| optimal|t a rand|en visit|arest ci| city un|he optim| used to|l all ha|een visi|ptimal o|ll have |salesman| have be|all have|alesman |avelling| nearest|o determ| quickly|g salesm|tedly vi|m. In it| algorit|sman pro|ms used |y until |ity unti|isits th|oblem. I|l have b| In it, |gorithm | the tra|arts at |r algori|ing sale|ually no| tour, b|t the op|a short |roblem. |its the |city unt| a short|travelli|one of t| the fir|the near|ted. It |t quickl|determin|our, but|to the t|It quick|was one | salesma| It quic|solution|edly vis|andom ci|tour, bu|s at a r|ty and r|earest n|ields a | nearest|lly not |ed. It q|ermine a|n proble|ution to|ithm was|f the fi|bour alg|d to det|ts the n|mine a s|ut usual|lgorithm|e salesm|hbour al|r, but u| of the | until a|lesman p|ts at a |sed to d|rest cit|on to th| repeate|orithm w| all hav|it, the |ur, but |ntil all|n visite| the sal| visits |the trav| to dete|dom city|a random|ed to de|usually |sually n|til all |st neigh|short to|ally not|st algor|have bee|he first|visited.| one of |repeated|
|, there is no|oblems quickl|there is no k|required to s|ckly, called |to solve the |otable charac|em is known. |wn efficient |lete problems|cient way to |of the princi|is one of the|is no known e|an NP-complet|s possible to|t solution to|m grows. As a| called the P|e problem gro|ime required |m increases v|P-complete pr|n. That is, t|he first plac|no fast solut|quired to sol|me), there is|own efficient|indeed, the m| as the size |m can be veri|blem can be v| one of the p|y currently k| or not it is|oblems is tha|Although any | a solution i|in computer s|he time requi|e verified qu|nomial time),|e to solve th|hat no fast s|roblem can be|solve these p|science today|mplete proble| in computer |problems in c| computer sci|istic of NP-c|haracteristic|kly as the si| NP problem, |; indeed, the|the most nota|e the problem|led the P ver| any currentl|ble character| to solve the|puter science|able characte| problems is |lution to the|polynomial ti|plete problem|ssible to sol|omplete probl|e required to|he problem gr|is, the time |sus NP proble| grows. As a |problem can b|e problem can|hough any giv|t is possible|oblem, is one|acteristic of| solution to |n solution to|as the size o|tion to an NP|tion to them | problem, is | not it is po|ne of the pri|ost notable c|le to solve t|ipal unsolved|y given solut|ence, determi|n be verified|equence, dete| solve these |e characteris|lved problems|unsolved prob| polynomial t|ic of NP-comp|nown algorith| it is possib|ncipal unsolv|problems quic|roblems in co|ocate a solut|ete problem c|ses very quic|rst place; in| solution to |rently known | fast solutio|c of NP-compl|y to locate a|ed, the most | that no fast|us NP problem|wn. That is, |m, is one of | As a consequ|whether or no| determining |ient way to l|cate a soluti|on to an NP-c| be verified |ified quickly| problems in |e of the prob|nce, determin|problem grows|omial time), | verified qui| solve the pr|ution to an N|the principal|ng any curren| versus NP pr|ermining whet|the time requ|hem is known.|to them is kn| problem usin|omputer scien|e principal u| them is know| no fast solu|possible to s|rincipal unso| the principa|em grows. As | to them is k|he most notab|hat is, the t| known algori|oblems in com|at no fast so|lve these pro|NP-complete p|in polynomial| notable char|erified quick|lynomial time| given soluti| most notable|lace; indeed,|kly, called t|he size of th|determining w|, called the |te a solution| using any cu| the first pl|characteristi| is known. Th|blems quickly| an NP-comple|ze of the pro|s the size of|own algorithm|computer scie|en solution t|known. That i|l time), ther|-complete pro|ly known algo|he problem us|incipal unsol|s, the time r| to locate a |, the time re| That is, the| increases ve|uter science |s known. That|ion to them i|rithm increas| whether or n|using any cur|e size of the|ion in the fi|icient way to|solved proble|ve the proble|ce, determini|ems quickly, |P-complete pr| known effici|ther or not i|he principal |lems is that |o locate a so|iven solution|a consequence|s NP problem,|to solve thes|NP-complete p|irst place; i| to solve the|of NP-complet| quickly (in |oblem grows. |way to locate|blems in comp|d the P versu|), there is n|oblem can be |uence, determ|ently known a| the size of | algorithm in|e), there is |er or not it | currently kn|that no fast |e problems is|g any current|n to an NP-co| very quickly|s very quickl|n to them is | way to locat|olved problem|known algorit|d to solve th|olve the prob|t place; inde|lthough any g|ly as the siz|ry quickly as|ent way to lo|n the first p| is one of th|st place; ind|le characteri| solution in |e these probl|ncreases very|ot it is poss|y quickly as |s that no fas| is no known |e problems qu|al unsolved p|the first pla|termining whe|me required t|increases ver|hese problems|e a solution |lution in the|he P versus N|ime), there i|blem using an|reases very q|algorithm inc|the problem u| indeed, the |ickly, called|ugh any given|roblem using |the size of t|l unsolved pr|nown efficien|ining whether| place; indee|size of the p| time), there|problem using|re is no know|ution in the |ere is no kno|ution to them| of the probl|(in polynomia|ristic of NP-|n computer sc|em, is one of|lem grows. As|plete problem|P versus NP p|ing any curre|very quickly |e P versus NP| of the princ|deed, the mos|rsus NP probl|, determining|ithm increase| of NP-comple|ed to solve t|here is no kn|problem, is o|ntly known al|e; indeed, th|racteristic o|complete prob|n polynomial |ve these prob|ows. As a con|notable chara|lgorithm incr|roblems quick|uickly as the|te problems i|on to them is|verified quic|rified quickl|n NP-complete|s in computer|one of the pr|n algorithm i|em can be ver|grows. As a c| known. That | size of the |lete problem |eristic of NP|her or not it|uired to solv|ough any give|at is, the ti| time require|ning whether | problems qui|e is no known|s quickly, ca|cipal unsolve|known efficie|cteristic of |ion to an NP-|al time), the|principal uns|d quickly (in|uickly (in po|o fast soluti| there is no |orithm increa|e, determinin|er science to|an be verifie|consequence, |currently kno|o an NP-compl|called the P |ndeed, the mo|solution to a|sing any curr|e of the prin|ired to solve|thm increases|o solve the p| science toda|ied quickly (|etermining wh| consequence,|versus NP pro| these proble|es very quick|it is possibl| is possible |quence, deter| NP-complete | possible to |ersus NP prob|rrently known|As a conseque|these problem|d, the most n|quickly (in p|ms in compute|any given sol|nt way to loc|e first place|t notable cha|-complete pro|ossible to so|ems is that n|ickly (in pol|eed, the most|y as the size|t way to loca|f the princip|se problems q|on in the fir|ete problems |is that no fa|solution to t|olve these pr| any given so|hm increases |o known effic|in the first |ng whether or|f NP-complete| problem grow| is, the time|most notable |solve the pro|blems is that|lems in compu| no known eff| required to |ickly as the | problem can |sible to solv|the problem g|not it is pos| can be verif|lem, is one o|a solution in|ace; indeed, |ven solution |t is, the tim|ether or not | NP-complete | principal un|ial time), th|roblem, is on|be verified q|ible to solve|, is one of t|. That is, th|ms is that no| the problem |nsolved probl|alled the P v|solution in t|n efficient w|ckly (in poly|stic of NP-co|t it is possi|r science tod|ed the P vers|roblems is th|ficient way t|ese problems |r or not it i|y known algor| a consequenc|urrently know|o them is kno|ed quickly (i|ws. As a cons|lled the P ve|r not it is p| quickly as t|ems in comput|ate a solutio|eases very qu|lem using any|s one of the |s a consequen|the P versus |problems is t| the time req| to an NP-com|y (in polynom|ery quickly a|gh any given |t no fast sol|omplete probl|olution to an|quickly as th|roblem grows.| the problem |ly, called th|ble to solve |sequence, det|e problem usi|mplete proble|ly (in polyno|n in the firs| in the first|or not it is |ases very qui| efficient wa|ay to locate |given solutio|blem grows. A|ter science t|is possible t|fficient way |gorithm incre|ize of the pr|time required|That is, the |hether or not|NP problem, i|table charact|ynomial time)|wn algorithm | characterist|ast solution |st notable ch|blem, is one |g whether or |rmining wheth|red to solve | locate a sol|lems quickly,| the most not| quickly, cal|no known effi|ny given solu|m is known. T|ny currently |o solve these| is that no f|d problems in|tion in the f|any currently|efficient way| the P versus|s is that no |quickly, call|st solution t|olynomial tim|ed problems i|pal unsolved |place; indeed| unsolved pro|s no known ef|rows. As a co|em using any |complete prob|locate a solu|time), there |though any gi|oblem using a|ved problems |mining whethe|, the most no|them is known|ckly as the s|lve the probl|mial time), t|P problem, is|ms quickly, c|is known. Tha|e time requir|m using any c|f the problem|h any given s|e most notabl|teristic of N|equired to so|aracteristic |cience today.|s. As a conse|first place; |y, called the|tly known alg|kly (in polyn|mputer scienc|onsequence, d|creases very |nown. That is|fast solution|olution in th|uickly, calle|. As a conseq|nsequence, de| P versus NP |of the proble|can be verifi|ce; indeed, t|fied quickly |tic of NP-com|te problem ca|ing whether o|olution to th|to locate a s|lem can be ve| (in polynomi|own. That is,|lution to an | first place;|to an NP-comp|
| on postal envelopes, a|elopes, automatic recog|assification of text in|btopic image analysis o|that deals with digital| typical applications o|ern recognition techniq|on, classification of t|am/non-spam email messa| postal codes on postal|ostal envelopes, automa|ion, classification of |ories (e.g., spam/non-s|writing image extractio|al forms.[7] The last t|uman faces, or handwrit|ations of pattern recog| forms.[7] The last two|n postal envelopes, aut|tten postal codes on po|l codes on postal envel|atic speech recognition| image extraction from |ries (e.g., spam/non-sp|ic speech recognition, |o pattern recognition s|omatic recognition of i|ications of pattern rec|automatic recognition o|ion techniques are auto|tern recognition that d|c speech recognition, c|ge analysis of pattern |n recognition technique|rn recognition that dea|an faces, or handwritin| recognition of images |, automatic recognition|tern recognition techni|ies (e.g., spam/non-spa|image analysis of patte|edical forms.[7] The la|plications of pattern r|images as input to patt|ons of pattern recognit|pam email messages), th|orm the subtopic image |matic recognition of ha|ndwritten postal codes |[7] The last two exampl|pical applications of p|s of pattern recognitio|iting image extraction |tion that deals with di|n, classification of te|g image extraction from| extraction from medica|alysis of pattern recog|non-spam email messages| examples form the subt|ttern recognition syste|om medical forms.[7] Th|typical applications of|on techniques are autom|o examples form the sub|from medical forms.[7] |dical forms.[7] The las|ions of pattern recogni|medical forms.[7] The l|forms.[7] The last two |dwriting image extracti|tion of text into sever|n techniques are automa|ication of text into se| recognition that deals|sages), the automatic r|of pattern recognition |lysis of pattern recogn|cognition techniques ar|e last two examples for|n faces, or handwriting| automatic recognition |s.[7] The last two exam|utomatic speech recogni|en postal codes on post|opic image analysis of |ing image extraction fr|e automatic speech reco|egories (e.g., spam/non|es on postal envelopes,|mples form the subtopic|tal images as input to |of handwritten postal c|gital images as input t|nition of handwritten p| deals with digital ima|he subtopic image analy|h recognition, classifi| images as input to pat| text into several cate| form the subtopic imag|s, or handwriting image|envelopes, automatic re|stal codes on postal en|am email messages), the|ecognition that deals w| spam/non-spam email me|tal envelopes, automati|cal applications of pat|s of pattern recognitio| of human faces, or han|f pattern recognition t|extraction from medical|peech recognition, clas|cognition, classificati|two examples form the s|ategories (e.g., spam/n|rm the subtopic image a|o several categories (e|into several categories|fication of text into s|g., spam/non-spam email|on of images of human f|ubtopic image analysis |utomatic recognition of|al categories (e.g., sp|of human faces, or hand|ition that deals with d|odes on postal envelope|ch recognition, classif|analysis of pattern rec|ognition techniques are|atic recognition of han|ls with digital images |ther typical applicatio|ysis of pattern recogni|cation of text into sev|is of pattern recogniti|opes, automatic recogni|ion of handwritten post| speech recognition, cl|nalysis of pattern reco|The last two examples f|ns of pattern recogniti|on that deals with digi| the subtopic image ana|Other typical applicati|applications of pattern|rn recognition systems.|nition techniques are a|riting image extraction|n from medical forms.[7|velopes, automatic reco|ition of handwritten po|ndwriting image extract|l messages), the automa|ms.[7] The last two exa|s on postal envelopes, |n postal codes on posta|tal codes on postal env|pattern recognition tha|classification of text |form the subtopic image| of handwritten postal |gnition of images of hu|her typical application| automatic recognition |es as input to pattern |s, automatic recognitio| recognition, classific| with digital images as| applications of patter| handwritten postal cod|s input to pattern reco|h digital images as inp|put to pattern recognit| pattern recognition th| into several categorie|lassification of text i|l forms.[7] The last tw| last two examples form|ten postal codes on pos|recognition systems.[8]|spam/non-spam email mes|s form the subtopic ima|at deals with digital i|ages of human faces, or| several categories (e.|es (e.g., spam/non-spam| analysis of pattern re|dwritten postal codes o| automatic speech recog| digital images as inpu| The last two examples |des on postal envelopes|ition, classification o|deals with digital imag|ction from medical form| categories (e.g., spam|are automatic speech re|r typical applications |ting image extraction f|ecognition techniques a|automatic speech recogn|] The last two examples|several categories (e.g|tern recognition system|gnition that deals with|cognition of handwritte|codes on postal envelop|on-spam email messages)|s), the automatic recog|mages as input to patte|spam email messages), t|s with digital images a| from medical forms.[7]| to pattern recognition|rom medical forms.[7] T|ques are automatic spee|nput to pattern recogni|omatic speech recogniti|tic speech recognition,|ation of text into seve| of pattern recognition|human faces, or handwri|pattern recognition tec|he last two examples fo| classification of text|ttern recognition techn|pattern recognition sys| messages), the automat|al images as input to p|n of handwritten postal|.[7] The last two examp|m/non-spam email messag|to pattern recognition |tomatic speech recognit|ues are automatic speec|, the automatic recogni|hniques are automatic s|omatic recognition of h| images of human faces,|al applications of patt|f pattern recognition t|ognition of handwritten| medical forms.[7] The |pic image analysis of p|cognition of images of | recognition of handwri|eral categories (e.g., |iques are automatic spe|cognition systems.[8][9|e analysis of pattern r|c image analysis of pat|e.g., spam/non-spam ema|ion that deals with dig|tic recognition of imag|f human faces, or handw|image extraction from m|he automatic recognitio|ic image analysis of pa|m the subtopic image an|ognition that deals wit|age extraction from med|recognition, classifica|.g., spam/non-spam emai|ital images as input to|postal envelopes, autom|on postal envelopes, au| input to pattern recog|xt into several categor|or handwriting image ex|c recognition of handwr|cal forms.[7] The last |text into several categ|subtopic image analysis| codes on postal envelo|veral categories (e.g.,|ail messages), the auto|ges as input to pattern|ge extraction from medi|ition techniques are au|ion of text into severa|th digital images as in|t into several categori|mage analysis of patter|lications of pattern re|tic recognition of hand| pattern recognition sy|on from medical forms.[| techniques are automat|ces, or handwriting ima|automatic recognition o|ages as input to patter|age analysis of pattern| as input to pattern re|matic speech recognitio|stal envelopes, automat| of images of human fac|t deals with digital im|ification of text into |chniques are automatic | (e.g., spam/non-spam e|es form the subtopic im|techniques are automati|gnition techniques are |mage extraction from me|xamples form the subtop|7] The last two example|n that deals with digit|er typical applications|ion of images of human |m medical forms.[7] The|tion from medical forms|written postal codes on|ges), the automatic rec|recognition of handwrit|n recognition systems.[|), the automatic recogn|recognition techniques |atic recognition of ima|ssification of text int|rn recognition techniqu|andwritten postal codes|man faces, or handwriti|, classification of tex|tion, classification of|handwritten postal code|ples form the subtopic |amples form the subtopi|, or handwriting image |handwriting image extra|n-spam email messages),|recognition of images o| image analysis of patt|n of text into several |postal codes on postal |ition of images of huma|pplications of pattern |attern recognition tech|tomatic recognition of |es, automatic recogniti|st two examples form th|images of human faces, |al codes on postal enve|gnition, classification|of text into several ca|on of handwritten posta|ognition of images of h|eals with digital image|tegories (e.g., spam/no|m email messages), the |l images as input to pa|topic image analysis of|last two examples form |s as input to pattern r|action from medical for|, spam/non-spam email m| two examples form the |ion from medical forms.|ges of human faces, or | of text into several c|ast two examples form t|tions of pattern recogn|ecognition of handwritt|t to pattern recognitio|speech recognition, cla|., spam/non-spam email |utomatic recognition of|nition, classification | that deals with digita|echniques are automatic|essages), the automatic|l applications of patte|f images of human faces|of pattern recognition |cognition that deals wi|tomatic recognition of |ttern recognition that |ssages), the automatic |examples form the subto|ical forms.[7] The last|eech recognition, class|nto several categories |hat deals with digital |as input to pattern rec|cations of pattern reco|ages), the automatic re|the subtopic image anal| faces, or handwriting |pam/non-spam email mess|traction from medical f|ng image extraction fro|recognition that deals |nition that deals with |ut to pattern recogniti|gories (e.g., spam/non-|t two examples form the|niques are automatic sp|les form the subtopic i|wo examples form the su|gnition of handwritten |e subtopic image analys|everal categories (e.g.|of images of human face|s of human faces, or ha|on of text into several|al envelopes, automatic|l envelopes, automatic | email messages), the a|ic recognition of image| pattern recognition te|nvelopes, automatic rec|matic recognition of im| recognition techniques|ith digital images as i|aces, or handwriting im|ostal codes on postal e|ecognition systems.[8][| recognition systems.[8|email messages), the au|ic recognition of handw|r handwriting image ext|ypical applications of | the automatic recognit|l categories (e.g., spa|ecognition of images of|es of human faces, or h|-spam email messages), |lopes, automatic recogn|messages), the automati|e automatic recognition|the automatic recogniti|andwriting image extrac|pes, automatic recognit|c recognition of images| of pattern recognition|igital images as input |ical applications of pa|attern recognition that| or handwriting image e|rms.[7] The last two ex|ritten postal codes on |mail messages), the aut|re automatic speech rec|attern recognition syst|xtraction from medical |with digital images as |tion of images of human|n of images of human fa|tion techniques are aut|sis of pattern recognit|ech recognition, classi|(e.g., spam/non-spam em|categories (e.g., spam/|als with digital images|es are automatic speech|ognition, classificatio|ern recognition systems|itten postal codes on p| human faces, or handwr|ognition systems.[8][9]|il messages), the autom|raction from medical fo|mages of human faces, o|/non-spam email message|f text into several cat|nition of images of hum|ecognition, classificat|es, or handwriting imag|sification of text into|f handwritten postal co|digital images as input| are automatic speech r|input to pattern recogn|faces, or handwriting i|ext into several catego|ral categories (e.g., s|n recognition that deal| subtopic image analysi|s (e.g., spam/non-spam | handwriting image extr|s are automatic speech |to several categories (|es), the automatic reco|tion of handwritten pos| envelopes, automatic r|e extraction from medic|orms.[7] The last two e|ern recognition that de| postal envelopes, auto|
|ontaining|n was the|ool to co|zle is a |ans an al| compute |tivation |oblem of |ation for|aining tw|Hamilton |e dodecah|dodecahed|nvented i|s.[1] The|it on the|olution o|The solut|) edges (|he motiva|f the puz|n icosahe|an circui|odecahedr|r which h|ented ico|f an icos|blem of s|for Hamil|a Hamilto|ns an alg|on, for w| is a cyc|h he inve|(i.e. a H|ron, for | he inven|on was th|solution |(in ancie|ted icosi|nian circ|vented ic|nt Greek |the symme| symmetri|e puzzle |eek icosa|a cycle c|which he |compute t| was the |The motiv|ent Greek|taining t|the dodec|. a Hamil|e. a Hami|amilton w|o compute|pute the |ining twe| for whic| on the d|ies.[1] T|ancient G|] The sol|sahedron,| algebrai|otivation|ch he inv|l to comp| icosahed|n of the |the probl| (i.e. a | ancient |ient Gree|mmetries |hich he i|uit on th|ecahedron| a cycle |on the do|tion of t|an icosah| the prob|an algebr|, for whi|hedron, f|puzzle is|braic too|icosa) ed|cient Gre|miltonian|roblem of| cycle co| invented| Hamilton|he dodeca|ries.[1] |he soluti|lution of| icosians|ton was t|ges (i.e.|circuit o|ivation f|ries of a|e solutio| The solu|cycle con|tries of |ymmetries|lton was |s of an i|ebraic to|[1] The s| of symme| for Hami|of the pu| of an ic|t Greek i|tries.[1]| an icosa|nty (in a|icosians |edron, fo|n, for wh|aic tool |ahedron).| the dode|sa) edges| which he|le is a c|s the pro|rcuit on |he invent|ek icosa)| problem | (in anci|ians an a| motivati|ies of an|metries o|e is a cy|es.[1] Th|ute the s|n for Ham|to comput|y (in anc|tion for |e invente|dges (i.e|k icosa) |d icosian|in ancien|sians an |milton wa|cosahedro| the symm| to compu| Greek ic| edges (i|ing twent| Hamilton|as the pr|or Hamilt|ion of th| puzzle i|osians an|mmetries.| of the p|osa) edge|for which|metries.[|ahedron, |m of symm|e symmetr|s a cycle|ntaining |on for Ha|.[1] The |n ancient|is a cycl|ty (in an|f symmetr|e the sym|ymmetries| dodecahe|icosahedr|on of the|t on the |twenty (i| containi|e contain|ltonian c|ian circu|vation fo| the puzz|edges (i.| circuit |nted icos|e motivat|enty (in |s an alge|ircuit on|algebraic| an algeb|ol to com| tool to |cosa) edg|reek icos|cuit on t|raic tool|Greek ico|iltonian | twenty (|of an ico|te the sy|em of sym|invented |he symmet|motivatio|i.e. a Ha|lgebraic | symmetri|a) edges |dron, for|symmetrie|g twenty |lem of sy|s (i.e. a|symmetrie| a Hamilt|Hamiltoni|cle conta|ompute th|uzzle is |he proble|amiltonia|le contai|r Hamilto|n the dod|problem o|decahedro|es (i.e. |etries of|ning twen|ution of |tonian ci|ilton was|of symmet|n circuit|onian cir|tool to c|n algebra|.e. a Ham|c tool to|es of an |he puzzle|the puzzl| icosa) e|ion for H|etries.[1|cahedron)|cosians a|or which |wenty (in|ich he in|ic tool t|e problem|containin| solution|ycle cont|zzle is a|gebraic t|ncient Gr|was the p|ng twenty|1] The so|osahedron|ed icosia|mpute the|
|ass of functions can be l|if it can be done in poly|t certain classes cannot |f functions can be learne|in class of functions can| and feasibility of learn| Negative results show th| in polynomial time. Ther|of time complexity result|earning theory, a computa|on to performance bounds,|y and feasibility of lear|ain class of functions ca|are two kinds of time com|ing theorists study the t| done in polynomial time.|sibility of learning. In |is considered feasible if|ow that certain classes c|asibility of learning. In| are two kinds of time co|idered feasible if it can|ning. In computational le|In computational learning|l time. There are two kin|tain classes cannot be le|me complexity results. Po|ounds, computational lear|ts study the time complex|ts. Positive results show|ity of learning. In compu|ot be learned in polynomi|e done in polynomial time|es cannot be learned in p|al learning theory, a com|ity results. Positive res|me complexity and feasibi|in polynomial time. There|omputational learning the|f time complexity results|that a certain class of f| show that a certain clas|udy the time complexity a|ddition to performance bo|easibility of learning. I|onal learning theorists s|heory, a computation is c|ional learning theorists |omial time. Negative resu|be learned in polynomial | results show that certai|d feasible if it can be d|ertain class of functions|learned in polynomial tim|results show that certain|y the time complexity and|olynomial time. There are|nnot be learned in polyno|at a certain class of fun| Positive results show th|sults show that a certain|nsidered feasible if it c|theory, a computation is |formance bounds, computat|xity and feasibility of l|exity and feasibility of |lynomial time. Negative r|Positive results show tha|, computational learning |e. There are two kinds of|ertain classes cannot be |e bounds, computational l|tive results show that ce|hat certain classes canno| time. Negative results s|tation is considered feas|learning theory, a comput|e are two kinds of time c|easible if it can be done|e two kinds of time compl|lasses cannot be learned |. In computational learni|polynomial time. Negative|arning theory, a computat|an be done in polynomial |nal learning theorists st|mplexity and feasibility |n polynomial time. There |n classes cannot be learn| cannot be learned in pol| of learning. In computat|y of learning. In computa|ions can be learned in po| certain class of functio| feasibility of learning.|an be learned in polynomi|bounds, computational lea|s, computational learning|ds, computational learnin|of learning. In computati|nce bounds, computational|ng. In computational lear|red feasible if it can be|utational learning theory|s of time complexity resu|rned in polynomial time. | show that certain classe|heorists study the time c|ts show that a certain cl|cannot be learned in poly| learning theory, a compu|ial time. Negative result|ds of time complexity res| kinds of time complexity|learned in polynomial tim|t can be done in polynomi|ance bounds, computationa|results show that a certa|o performance bounds, com| computational learning t|ns can be learned in poly|n computational learning |f learning. In computatio|show that a certain class|learning theorists study |ion to performance bounds|rtain classes cannot be l|earned in polynomial time|itive results show that a|how that certain classes |ng theorists study the ti|and feasibility of learni|that certain classes cann|addition to performance b| learned in polynomial ti|arned in polynomial time.|ses cannot be learned in |mance bounds, computation| learned in polynomial ti|utation is considered fea|rformance bounds, computa|lts show that a certain c| in polynomial time. Nega|considered feasible if it|tion to performance bound|sidered feasible if it ca|ative results show that c|al time. There are two ki| of time complexity resul|exity results. Positive r| be done in polynomial ti|complexity results. Posit|inds of time complexity r|putational learning theor|s can be learned in polyn| time complexity results.|eory, a computation is co| In computational learnin|tions can be learned in p|ational learning theorist|ists study the time compl|gative results show that |lass of functions can be |earning theorists study t|nd feasibility of learnin| theory, a computation is|n is considered feasible |plexity results. Positive|y results. Positive resul|ime. Negative results sho|l learning theory, a comp|e. Negative results show | learning. In computation|earning. In computational|ition to performance boun|omial time. There are two|arned in polynomial time.|ty of learning. In comput|nomial time. Negative res|ow that a certain class o|complexity and feasibilit| of functions can be lear|ty and feasibility of lea|mial time. Negative resul|ynomial time. Negative re|nctions can be learned in| results show that a cert|ce bounds, computational |ity and feasibility of le| results. Positive result|lts show that certain cla|ts show that certain clas|e learned in polynomial t|o kinds of time complexit|computational learning th|ed feasible if it can be |time complexity results. |how that a certain class |ults. Positive results sh|ve results show that cert|ional learning theory, a |tional learning theorists| polynomial time. Negativ|Negative results show tha|e complexity results. Pos| be learned in polynomial|ults show that a certain |, a computation is consid|w that a certain class of|lity of learning. In comp|l learning theorists stud|me. There are two kinds o|ons can be learned in pol|tive results show that a |g. In computational learn|s show that certain class|ble if it can be done in |be done in polynomial tim| is considered feasible i| that a certain class of |tional learning theory, a| can be done in polynomia|classes cannot be learned|sults show that certain c|he time complexity and fe|study the time complexity|theorists study the time |sults. Positive results s|rtain class of functions |lexity results. Positive |ormance bounds, computati|ynomial time. There are t|n class of functions can |wo kinds of time complexi|omputation is considered |e complexity and feasibil|tain class of functions c|w that certain classes ca|certain classes cannot be|esults. Positive results |ion is considered feasibl| certain classes cannot b|annot be learned in polyn|y, a computation is consi|ositive results show that| feasible if it can be do| that certain classes can|le if it can be done in p|the time complexity and f|g theory, a computation i|certain class of function|ning theorists study the |ults show that certain cl|ial time. There are two k|omplexity results. Positi|time complexity and feasi|ain classes cannot be lea|feasibility of learning. | performance bounds, comp| a computation is conside|time. There are two kinds|nomial time. There are tw|In addition to performanc|xity results. Positive re|lynomial time. There are |mial time. There are two | the time complexity and |rning. In computational l|There are two kinds of ti|s cannot be learned in po|ible if it can be done in|t a certain class of func|ned in polynomial time. N|not be learned in polynom|ility of learning. In com|of functions can be learn|s of functions can be lea| if it can be done in pol|orists study the time com|sts study the time comple|class of functions can be|. Negative results show t|ning theory, a computatio|e results show that certa|. There are two kinds of | study the time complexit|show that certain classes|tudy the time complexity |n to performance bounds, |f it can be done in polyn|ing. In computational lea|dy the time complexity an|asible if it can be done |omputational learning the|ation is considered feasi| There are two kinds of t|tion is considered feasib|mplexity results. Positiv|lexity and feasibility of|ty results. Positive resu|rmance bounds, computatio|ory, a computation is con|hat a certain class of fu|nal learning theory, a co|sses cannot be learned in|ime complexity results. P|putation is considered fe|tational learning theoris| a certain class of funct|dered feasible if it can | computation is considere|ry, a computation is cons|arning. In computational |g theorists study the tim|l time. Negative results | can be learned in polyno| to performance bounds, c|dition to performance bou|sitive results show that |putational learning theor| addition to performance | it can be done in polyno|n be learned in polynomia|computational learning th|onal learning theory, a c| classes cannot be learne|ed in polynomial time. Ne|learning. In computationa| time complexity and feas|d in polynomial time. Neg|omplexity and feasibility|be learned in polynomial |egative results show that|asses cannot be learned i|functions can be learned | two kinds of time comple| complexity results. Posi|unds, computational learn|sible if it can be done i| theorists study the time|onsidered feasible if it |ibility of learning. In c|e results show that a cer|e time complexity and fea| time. There are two kind|ve results show that a ce|ere are two kinds of time|on is considered feasible|can be learned in polynom| functions can be learned|s. Positive results show |re two kinds of time comp|ing theory, a computation|mputational learning theo|e if it can be done in po|a certain class of functi|olynomial time. Negative |results. Positive results| bounds, computational le| polynomial time. There a|here are two kinds of tim|rning theory, a computati|me. Negative results show|ered feasible if it can b|t be learned in polynomia|rning theorists study the|ctions can be learned in |kinds of time complexity |re are two kinds of time |ive results show that cer|at certain classes cannot|rists study the time comp|lts. Positive results sho|ne in polynomial time. Th|ational learning theory, |utational learning theori|e in polynomial time. The|mputational learning theo|arning theorists study th|earned in polynomial time|erformance bounds, comput|in polynomial time. Negat|ime complexity and feasib|feasible if it can be don|ss of functions can be le|n be done in polynomial t|a computation is consider|s show that a certain cla|tational learning theory,|done in polynomial time. |n addition to performance|. Positive results show t|eorists study the time co| computational learning t|s considered feasible if |nds of time complexity re| complexity and feasibili|unctions can be learned i|performance bounds, compu|mputation is considered f| be learned in polynomial|in classes cannot be lear|one in polynomial time. T|ive results show that a c|esults show that certain |s study the time complexi|plexity and feasibility o|d feasibility of learning|e learned in polynomial t|polynomial time. There ar|al learning theorists stu|time. Negative results sh|ng theory, a computation | class of functions can b| considered feasible if i|can be done in polynomial|n polynomial time. Negati|ime. There are two kinds | learning theorists study|it can be done in polynom|computation is considered|esults show that a certai|bility of learning. In co|to performance bounds, co|nds, computational learni|two kinds of time complex|al time. Negative results|
| biological|uencing has|many genome| desire to |es and othe|nce found i| mention th|equencing h|he context | the desire| annotate a|o large to |ible, as th| not to men| between ge|f marking t|ions can va|gnisable st|ire to anno|genomics, a| the rate o|too large t| regions ca|ttleneck. A|nce. This p|ing the gen|marking the|In the cont|This proces|to annotate|e exact seq| is the pro|cess of mar|sible, as t|e recognisa| genomes as|n the desir|because mos|ny genomes |gh the exac|n is made p|cognisable |f genomics,|n these reg|s the proce|to mention |most genome|regions can|ns, althoug|neck. Annot|ocess needs| possible, |d because m|ognisable s|by the fact|he exact se| to annotat|re too larg| and other |ocess of ma|s many geno|enomes as p|ion is made|biological |at genes ha| sequence. |mics, annot|otate by ha|annotation |by hand, no|stop region|act sequenc|enes have r|regions, al|ess of mark|have recogn|s and other|ence found | ceased to | by hand, n|g has cease|otation is |sible by th|ation is th|tures in a |e regions c|ct that gen|se most gen|start and s|uence found|uence. This|ave recogni|nd stop reg|hand, not t|top regions| other biol|ssible by t|e to annota|t of genomi|nisable sta|h the exact| large to a|notation is| can vary b|a bottlenec|tomated bec|s the rate |e start and|ate of sequ|equence fou|bottleneck.|y hand, not|eds to be a|ary between|es have rec|genes have |ate as many|notate by h|are too lar|ological fe|de possible|le start an|ogical feat|enomes are |he genes an|xt of genom| hand, not |fact that g|re to annot|a DNA seque|ssible, as |ose a bottl|ted because|al features|ext of geno| context of|found in th| the exact |and other b|that genes |is process |ause most g|s, annotati|e genes and|s as possib|t genes hav|ics, annota|tate by han| although t|e automated| many genom| genes have|e fact that|gions can v|on is the p|annotate as|e possible |exact seque|nomics, ann|the genes a|large to an|rocess need|e context o|hat genes h|omated beca|o mention t|ost genomes|as the rate| to pose a |oo large to|utomated be|op regions,|atures in a|le, as the |the exact s| vary betwe|lthough the|logical fea|n vary betw|notation is|ncing has c|nd other bi| start and |tation is t|art and sto| fact that |s are too l|arking the |s, although|possible, a|features in| stop regio|tion is the|on is made |ceased to p|, as the ra|l features |ry between | process of|d, not to m| too large |rking the g|cal feature|made possib|s in a DNA |res in a DN|ss of marki| the contex|has ceased |quencing ha|rt and stop|ce found in|ese regions|he desire t|on the desi|quence foun|annotate by|e by hand, |quence. Thi| rate of se|eneck. Anno| have recog| to mention|use most ge| features i| a DNA sequ|g the genes|an vary bet|mated becau|context of |te as many |in these re|ns can vary| This proce| genomics, |te by hand,|d to pose a|f sequencin|s have reco|ed because |ugh the exa|egions, alt|es in a DNA|ence. This |ound in the| of sequenc|gical featu|t that gene|ased to pos|r biologica|otation is |be automate|ntion the d|n a DNA seq| in a DNA s| to be auto|to pose a b| bottleneck|ade possibl|the fact th|omes as pos|ng the gene|sable start|ontext of g|y the fact | recognisab|ottleneck. |tation is m| these regi|ate by hand|as ceased t|cing has ce|hough the e|ck. Annotat|he rate of |s needs to |t and stop |rge to anno|e rate of s|other biolo|ge to annot|to annotate|esire to an|t to mentio|e as many g|the desire |se regions |ated becaus| most genom|encing has |hese region|notate as m|s can vary |e of sequen|ention the |ough the ex|ation is ma|e by the fa|needs to be|ther biolog|. Annotatio|ecognisable|e too large| is made po|between gen|in a DNA se|is made pos|sequence. T|ed to pose |xact sequen|nd in these|mes are too| of marking|pose a bott|ical featur|e desire to|as many gen| process ne|otate as ma|tween genes|rocess of m|any genomes| made possi| genomes ar|recognisabl|p regions, |not to ment| genes and |ecause most|s possible,|genomes are| the proces| sequence f|nnotate by |es are too |the context|these regio|etween gene|automated b| and stop r|NA sequence|his process|possible by|tate as man|nnotate as |ossible, as|desire to a| because mo|ble by the |cess needs |e found in |nes have re|sequence fo|tleneck. An|tion the de|mes as poss| be automat|s of markin|ossible by |ot to menti| has ceased| the fact t|the process|ct sequence| found in t|DNA sequenc|equence. Th|able start |genomes as |the rate of|he process |ons can var|ions, altho|text of gen|d in these |of marking |ion is the |k. Annotati|ween genes.|eck. Annota|, annotatio|ures in a D|e most geno|arge to ann|ss needs to| the genes |gions, alth| DNA sequen|s made poss| annotation|s to be aut|e. This pro|Annotation | of genomic|o pose a bo|. This proc|eeds to be |e a bottlen| automated |he fact tha|enes and ot|ing has cea|egions can |te of seque| in these r|e, as the r|e to annota|y between g|und in thes|d stop regi|ble start a| possible b|se a bottle|can vary be|mention the| as possibl|enomics, an| sequencing| as the rat|s process n|nomes as po|o be automa|nnotation i|omes are to|o annotate |eatures in |cause most | by the fac|tion is mad|as possible|of sequenci|ons, althou|s ceased to|process of | needs to b|iological f|isable star|A sequence.|ible by the|genes and o|es as possi| exact sequ|o annotate |e process o|cs, annotat|, although | marking th| a bottlene|act that ge|nomes are t|and, not to|though the |although th|sed to pose|ion the des| pose a bot|ve recognis| annotate b|tart and st|of genomics|nes and oth|ds to be au|n is the pr|ess needs t|le by the f|nnotation i|nd, not to |process nee|to be autom|sire to ann|her biologi|vary betwee|is the proc|st genomes | as many ge|t genomes a|d other bio|ce. This pr|leneck. Ann|ble, as the| Annotation|er biologic| to annotat|ng has ceas|sequencing |t sequence |y genomes a|n the conte|, not to me| that genes|king the ge|rate of seq|ntext of ge| are too la|omics, anno|eased to po| regions, a|and stop re|
|cation and|orithm bui|lds a mode|fication a|d for clas|a set of r|ng example|ining exam|at predict|onging to |ector mach|egories, a|) are a se|predicts w|one of two|earning me|h marked a|categories| vector ma| examples,|Ms) are a |egression.|f training|gories, an|ning metho|and regres|rning meth|ised learn|s, an SVM |d as belon| are a set| a set of | of relate|two catego|ation and |r a new ex|rithm buil|xamples, e|ining algo|egory or t|ds a model| classific|o one cate|ines (SVMs|w example |Support ve|ion and re| of traini|n a set of|classifica|ory or the|ach marked|ods used f|an SVM tra| that pred|raining al|icts wheth|les, each |ked as bel|ing algori|sification|longing to|raining ex|alls into |s, each ma|s whether |ple falls |o categori|regression|to one of |nging to o|chines (SV|that predi| to one of|into one c|nes (SVMs)|rked as be| learning |pport vect|vector mac|ds used fo|upport vec|ls into on|e falls in| set of re|one catego| one categ|er a new e|Given a se| algorithm|nto one ca|training a|of trainin|l that pre|ategories,| machines |achines (S|gression. | as belong|hods used |t vector m|of two cat|le falls i|lated supe|SVMs) are |a model th| the other|odel that | used for |edicts whe|lls into o|ctor machi| SVM train|ression. G|d supervis| new examp|ne categor|t of train| whether a|et of trai|SVM traini|ther a new|on. Given |gorithm bu|ven a set |training e|hines (SVM| supervise|gory or th|d learning|en a set o|thods used|are a set |ed as belo|VMs) are a|rvised lea|nd regress| a model t|y or the o|hm builds |ion. Given|used for c|redicts wh| set of tr|lassificat|re a set o|or machine|f two cate|ories, an |ry or the |ts whether|new exampl|n SVM trai|xample fal| or the ot|e a set of|falls into|algorithm |hat predic|dicts whet|related su|r machines|r classifi| builds a |uilds a mo| model tha| into one |ted superv|her a new |es, an SVM|ssion. Giv|ated super|g methods |set of rel|ification |mples, eac|sed learni|category o| category |ethods use|set of tra|, each mar|a new exam|pervised l|, an SVM t|rt vector |s used for|ries, an S| two categ|es, each m| a new exa|for classi|ng to one |of related|tegories, |elonging t| belonging|e category| for class|learning m|arning met|ether a ne| a set of |g examples|ervised le|ed learnin|g algorith| an SVM tr|port vecto| methods u|n and regr|assificati|lgorithm b|methods us|VM trainin|s into one| training |s belongin|each marke|on and reg|e of two c|ilds a mod| each mark| regressio|tion and r|arked as b| (SVMs) ar|belonging |example fa|sed for cl|. Given a |ies, an SV|tor machin|a set of t| categorie| Given a s| one of tw|amples, ea|ing exampl|(SVMs) are| example f|ssificatio|ication an|vised lear|r the othe|s a model |upervised |supervised|ed for cla|del that p|m builds a|as belongi|wo categor| marked as|model that|machines (|ategory or|M training|examples, |or the oth|f related |aining alg|ithm build|ed supervi|sion. Give|elated sup|ample fall|ing method|s (SVMs) a|tegory or |mple falls|ng methods| and regre|ch marked |d regressi| training |ne of two |cts whethe| falls int| of two ca|el that pr|hether a n|the other.|ing to one|builds a m|to one cat|ort vector|t predicts|ging to on|ew example| related s|ession. Gi|ng algorit|es (SVMs) |s) are a s|ning algor|iven a set|ples, each|aining exa|et of rela|or classif|thm builds|g to one o|t of relat|whether a | predicts |ning examp|marked as |n. Given a|o one of t|
|ein homology|egumes (legh| serve the s|ology betwee|eir near ide|etween hemog|rve the same| example of |their protei|bin in legum|hemoglobin).|dentical, wh|(leghemoglob|between hemo|ogy between |es are virtu|ve completel|both of thes|tely differe|es, their pr|lly identica|Both serve t|xygen in the|eins have co|o acid seque|n). Both ser|f this is th|ans and the |uctures are |serve the sa|ures are vir|obin). Both |identical pu| in humans a|ar identical|irtually ide|completely d|orting oxyge|cid sequence| similar pro|d sequences,|structures a|legumes (leg|moglobin in |tually ident|lects their |of transport|equences, th|d the hemogl|otein struct|ough both of|in in legume| homology be|ferent amino|fferent amin|lobin in hum|ransporting |ical purpose|een hemoglob|anism. Thoug| Though both|oglobin). Bo|nism. Though|eflects thei|es (leghemog|s their near|ely differen|n the organi|tical purpos|ilar protein| their prote|oglobin in h|ifferent ami|ne example o| proteins ha|same purpose|tures are vi| the hemoglo|no acid sequ|oth serve th|). Both serv|n humans and| sequences, |milar protei|re virtually|, which refl|gy between h| amino acid |cts their ne| are virtual|mology betwe|tein homolog|the similar | organism. T| of this is |n legumes (l|al purposes.|e of transpo|h of these p|urpose of tr|oxygen in th|tween hemogl|se of transp|proteins hav|otein homolo| structures |different am|ly identical| of transpor|res are virt|e organism. |which reflec|ually identi|ear identica|etely differ|imilar prote|entical purp|roteins have|are virtuall|y between he|nsporting ox|ng oxygen in|nces, their |in). Both se|example of t| and the hem|n in humans |near identic|en hemoglobi| completely |lar protein |the same pur|oteins have |leghemoglobi|ave complete|dentical pur| purpose of |e completely|n in the org|n structures|hemoglobin i|in homology | near identi|n hemoglobin|is the simil|obin in legu|in legumes (|hich reflect|ctures are v|rtually iden|s, their pro| of these pr| identical p|se proteins |g oxygen in |ences, their|organism. Th|moglobin in | their near | transportin|s (leghemogl|erent amino |gh both of t| hemoglobin |ins have com|ructures are|mes (leghemo|is is the si|t amino acid|h serve the |heir protein| same purpos|ween hemoglo|bin in human|protein stru|heir near id|e the same p|rotein homol|ganism. Thou|e same purpo|hough both o|omology betw|mpletely dif|rent amino a|globin in hu|globin). Bot|le of this i|h both of th| hemoglobin |erve the sam|acid sequenc| Both serve |l, which ref| oxygen in t|rting oxygen|y identical,|entical, whi|bin). Both s|sm. Though b| these prote|e virtually |rganism. Tho|pletely diff|mple of this|in the organ|ygen in the |eghemoglobin|nd the hemog|s have compl|in humans an| is the simi|f these prot|m. Though bo|gen in the o|umes (leghem|porting oxyg|oth of these|similar prot|r near ident|y different |ir protein s|ino acid seq|protein homo|ir near iden|ns and the h|ects their n| reflects th|r protein ho| between hem|ose of trans|he hemoglobi| the same pu| identical, |ing oxygen i|n homology b|n in legumes| protein hom|xample of th|al, which re|ve the same |r protein st|ch reflects |ese proteins|he same purp|reflects the|rotein struc|sporting oxy|me purpose o|s and the he|obin in huma|ple of this |. Both serve|hese protein|in structure|s the simila|his is the s|pose of tran|en in the or|f transporti|their near i|gumes (leghe| the organis|letely diffe|transporting|ich reflects|nt amino aci|the organism|oglobin in l|e proteins h|tein structu|ism. Though |tical, which| acid sequen|ns have comp|e similar pr|id sequences|quences, the| different a| both of the|umans and th|e hemoglobin|e of this is|ame purpose |ar protein h|rpose of tra|Though both |r identical |globin in le| in legumes |hemoglobin i|the hemoglob|ein structur|this is the |emoglobin in|th serve the|amino acid s| the similar|moglobin). B|and the hemo| have comple|ts their nea|eir protein | virtually i|flects their| which refle| humans and |tructures ar|ly different|. Though bot| (leghemoglo|ces, their p|One example |these protei|lobin). Both|of this is t|cal, which r|ent amino ac| protein str|of these pro|e purpose of|emoglobin in|s are virtua|in in humans|virtually id| in the orga|uences, thei|ally identic|teins have c|logy between|th of these |ugh both of |ompletely di|ghemoglobin)|s is the sim|lobin in leg| this is the|, their prot|purpose of t|h reflects t|mans and the|identical, w|ting oxygen |ical, which |he organism.|ample of thi|humans and t|mino acid se|emoglobin). |he similar p|homology bet|cal purposes| legumes (le|ntical purpo|ansporting o|ntical, whic|sequences, t|have complet|e example of|
|iss Institute of|l. The Canadian |adian Bioinforma|s offered throug|r a Creative Com| Commons license|orms designed to|ops on their web| Swiss Institute|Canadian Bioinfo|d online courses|an Bioinformatic| from training w|eos and slides f|d to teach bioin|al. The Canadian|s designed to te| Creative Common|lind and online |ps provides vide|tal. The Canadia|latforms designe|ormatics Trainin|s and slides fro|their website un|ics Workshops pr|s concepts and m|g Portal. The Ca|deos and slides |titute of Bioinf|rms designed to |fered through th|and slides from |ive Commons lice| of Bioinformati| website under a|platforms design| the Swiss Insti|ts and methods i|esigned to teach|ioinformatics co|oinformatics Tra| under a Creativ|s Workshops prov| The Canadian Bi|informatics Trai|site under a Cre|om training work|ethods include R|he Canadian Bioi|designed to teac|gh the Swiss Ins| Bioinformatics |informatics conc|vides videos and|website under a |nformatics conce|atics concepts a|rmatics Workshop|ides videos and |and online cours| concepts and me| workshops on th|eir website unde|ms designed to t|e courses offere|ered through the| through the Swi|s from training |nformatics Train| on their websit|nclude Rosalind |ics Training Por|ovides videos an|ffered through t|h bioinformatics| include Rosalin|d slides from tr|ss Institute of |forms designed t| Institute of Bi|des from trainin|Bioinformatics W|Swiss Institute |ormatics concept|formatics concep|Training Portal.|kshops provides |ough the Swiss I|es videos and sl|ware platforms d|nformatics Works|hops on their we|ng workshops on |te under a Creat|n Bioinformatics|Workshops provid|oinformatics Wor|ite under a Crea| and methods inc|alind and online| platforms desig|hods include Ros|ve Commons licen|nd online course|ne courses offer|g workshops on t|rough the Swiss |e Rosalind and o|nadian Bioinform|m training works| and slides from|es from training|matics Training |ng Portal. The C|re platforms des|are platforms de|Commons license.|cepts and method|ugh the Swiss In|itute of Bioinfo|formatics Traini|epts and methods|each bioinformat|tute of Bioinfor|The Canadian Bio|shops on their w|orkshops provide|Institute of Bio| designed to tea|aining workshops|ideos and slides|tforms designed |rtal. The Canadi|cs concepts and | and online cour| teach bioinform|atics Training P|of Bioinformatic|ine courses offe|atforms designed|s on their websi|rses offered thr|pts and methods | training worksh|rmatics Training|eative Commons l|to teach bioinfo|hops provides vi|training worksho|orkshops on thei|ir website under| their website u|r website under |Creative Commons|de Rosalind and |ourses offered t|shops provides v|rkshops on their|online courses o|bioinformatics c|n their website |from training wo|s include Rosali|ining workshops |e Commons licens| slides from tra|ics concepts and|d and online cou|matics concepts |ute of Bioinform|nd methods inclu|igned to teach b|lude Rosalind an|cs Workshops pro|o teach bioinfor|courses offered |tware platforms |ing workshops on|provides videos |formatics Worksh|d methods includ|ds include Rosal|der a Creative C|teach bioinforma|ude Rosalind and|Software platfor|e Swiss Institut|thods include Ro|nline courses of|os and slides fr|raining Portal. |rkshops provides| online courses | provides videos| offered through|Rosalind and onl|salind and onlin|informatics Work|er a Creative Co|des videos and s|ebsite under a C|f Bioinformatics|e of Bioinformat| Bioinformatics | Training Portal|videos and slide|ed through the S|through the Swis|nd and online co|s videos and sli|and methods incl|he Swiss Institu|the Swiss Instit|ind and online c|ned to teach bio|a Creative Commo|h the Swiss Inst|tics concepts an| a Creative Comm|e under a Creati|osalind and onli|ides from traini|s Institute of B|ch bioinformatic|under a Creative|ortal. The Canad|s provides video| Workshops provi|matics Workshops| courses offered|urses offered th|clude Rosalind a| videos and slid|signed to teach |raining workshop|ftware platforms|atics Workshops |s Training Porta|ormatics Worksho| Rosalind and on|bsite under a Cr|line courses off|lides from train|oncepts and meth|ative Commons li|ps on their webs|ach bioinformati| to teach bioinf|Portal. The Cana|red through the |rmatics concepts|slides from trai|anadian Bioinfor|cs Training Port|ning workshops o|ods include Rosa|concepts and met| Canadian Bioinf|ining Portal. Th|rovides videos a|e platforms desi|rom training wor|e Canadian Bioin|ncepts and metho|ian Bioinformati|nder a Creative |nd slides from t|nstitute of Bioi|ses offered thro|Bioinformatics T|methods include |ioinformatics Tr|ing Portal. The |workshops on the|reative Commons |ed to teach bioi|te of Bioinforma|wiss Institute o|s and methods in|aining Portal. T|. The Canadian B|ops provides vid|dian Bioinformat| bioinformatics |stitute of Bioin|ning Portal. The|offered through |on their website|d through the Sw|hrough the Swiss| Portal. The Can|es offered throu|gned to teach bi|heir website und|oftware platform|oinformatics con|include Rosalind|kshops on their |tics Workshops p| methods include|ioinformatics Wo|tics Training Po|tive Commons lic|